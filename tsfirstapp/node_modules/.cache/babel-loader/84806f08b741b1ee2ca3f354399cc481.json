{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-js\\\\reactApp\\\\tsfirstapp\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const [deadline, setDeadline] = useState(0);\n  const [todolist, SetTodolist] = useState([]);\n  useEffect(() => {}, [todolist]);\n\n  const handleChange = event => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } else {\n      setDeadline(Number(event.target.value));\n    }\n  };\n\n  const addTask = () => {\n    const newTask = {\n      taskName: task,\n      deadline: deadline\n    };\n    SetTodolist([...todolist, newTask]);\n    setTask(\"\");\n    setDeadline(0);\n  };\n\n  const deleteTask = selectedInd => {\n    todolist.filter((item, ind) => {\n      if (ind !== selectedInd) {\n        SetTodolist(item);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"task...\",\n          name: \"task\",\n          onChange: handleChange,\n          className: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"deadline (in Days)\",\n          name: \"deadline\",\n          onChange: handleChange,\n          className: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoList\",\n      children: todolist.length > 0 ? todolist.map((item, ind) => {\n        return /*#__PURE__*/_jsxDEV(TodoList, {\n          task: item.taskName,\n          deadline: item.deadline,\n          onClick: () => deleteTask(ind)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"L4tzk2SkETvSkRb/kA+VDOW86D0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react-js/reactApp/tsfirstapp/src/App.tsx"],"names":["React","useState","useEffect","TodoList","App","task","setTask","deadline","setDeadline","todolist","SetTodolist","handleChange","event","target","name","value","Number","addTask","newTask","taskName","deleteTask","selectedInd","filter","item","ind","length","map"],"mappings":"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","sourcesContent":["import React, { FC, ChangeEvent, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./components/TodoList\";\nimport { ITask } from \"./Interface\";\n\nconst App: FC = () => {\n  const [task, setTask] = useState<string>(\"\");\n  const [deadline, setDeadline] = useState<number>(0);\n  const [todolist, SetTodolist] = useState<ITask[]>([]);\n\n  useEffect(() => {}, [todolist]);\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    if (event.target.name === \"task\") {\n      setTask(event.target.value);\n    } else {\n      setDeadline(Number(event.target.value));\n    }\n  };\n\n  const addTask = (): void => {\n    const newTask = {\n      taskName: task,\n      deadline: deadline,\n    };\n    SetTodolist([...todolist, newTask]);\n\n    setTask(\"\");\n    setDeadline(0);\n  };\n\n  const deleteTask = (selectedInd:number) => {\n    todolist.filter((item, ind) => {\n      if(ind !== selectedInd){\n        SetTodolist(item)\n      }\n    } );\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Header\">\n        <div className=\"Input-container\">\n          <input\n            type=\"text\"\n            placeholder=\"task...\"\n            name=\"task\"\n            onChange={handleChange}\n            className=\"Input\"\n          />\n          <input\n            type=\"number\"\n            placeholder=\"deadline (in Days)\"\n            name=\"deadline\"\n            onChange={handleChange}\n            className=\"Input\"\n          />\n        </div>\n        <button className=\"btn\" onClick={addTask}>\n          Add Task\n        </button>\n      </div>\n      <div className=\"todoList\">\n        {todolist.length > 0\n          ? todolist.map((item, ind) => {\n              return (\n                <TodoList\n                  key={ind}\n                  task={item.taskName}\n                  deadline={item.deadline}\n                  onClick={() => deleteTask(ind)}\n                />\n              );\n            })\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}